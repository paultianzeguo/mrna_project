#!/usr/bin/env python
# coding: utf-8

# In[ ]:

## importing packages
import numpy as np
import math
import scipy.stats
from matplotlib import pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import copy

## Setting up parameters
r=0.59
d=[]    
angle=14/18

## Set up the first point
R3rna=np.array([0,0,0])
theta=np.random.uniform(-1/2*math.pi,1/2*math.pi)
phi=np.random.uniform(0,math.pi)
rna=np.array([0,phi,theta])
[x,y,z]=[r*math.sin(theta)*math.cos(phi),r*math.sin(theta)*math.sin(phi),r*math.cos(theta)]
R3rna=R3rna+np.array([x,y,z])
x1=[0]
y1=[0]
z1=[0]
x1.append(R3rna[0])
y1.append(R3rna[1])
z1.append(R3rna[2])
var2=0

## set up the loop function that creates new nucleotides to the end
## input the length data below, equation = (length of RNA - 30 * ribosome number)
while var2 <(0-30*0):
    [a,b,c]=rna
    c=math.pi/2-c
    phi=np.random.uniform(b-math.pi*angle,b+math.pi*angle)
    theta1=np.random.uniform(c-math.pi*angle,c+math.pi*angle)
    theta=math.pi/2-theta1
    c=math.pi/2-c
    rna=np.array([0,phi,theta])
    [x,y,z]=[r*math.sin(theta)*math.cos(phi),r*math.sin(theta)*math.sin(phi),r*math.cos(theta)]
    R3rna=R3rna+np.array([x,y,z])
    if R3rna[2]>0:
        x1.append(R3rna[0])
        y1.append(R3rna[1])
        z1.append(R3rna[2])
        var2=var2+1
    else:
        var2=var2
        rna=[a,b,c]
        R3rna=R3rna-np.array([x,y,z])
def ribosome(number):
    length=np.size(x1)
    var=0
    while var < number:
        num=np.random.randint(0,length-1)
        a1=x1[num+1]-x1[num]
        b1=y1[num+1]-y1[num]
        c1=z1[num+1]-z1[num]
        if math.sqrt(a1**2+b1**2+c1**2)<1:
            a1=30*a1        ##Changed
            b1=30*b1
            c1=30*c1
            for i in range(length-num):
                x1[num+i]=x1[num+i]+a1
                y1[num+i]=y1[num+i]+b1
                z1[num+i]=z1[num+i]+c1
            if all(i >= 0 for i in z1):
                var=var+1
            else:
                var=var
                for i in range(length-num):
                    x1[num+i]=x1[num+i]-a1
                    y1[num+i]=y1[num+i]-b1
                    z1[num+i]=z1[num+i]-c1

## analyzing collected data
## input the number of ribosomes below                    
ribosome(0)
fig = plt.figure()
X1=np.linspace(-100,100,100)
Y1=np.linspace(-50,50,100)
X,Y = np.meshgrid(X1,Y1)
Z=0*X+0*Y+0
ax = fig.gca(projection='3d')
ax=plt.axes(projection='3d')

ax.scatter(x1,y1,z1)
ax.plot(x1,y1,z1)
surf = ax.plot_surface(X, Y, Z)
